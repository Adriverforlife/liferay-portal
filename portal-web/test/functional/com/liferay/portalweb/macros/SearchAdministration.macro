definition {

	macro assertEngineVendorAndVersions {
		AssertTextEquals.assertPartialText(
			locator1 = "SearchAdmin#SEARCH_ENGINE_INFORMATION",
			position = "1",
			searchInformation = "${engineVendor}",
			value1 = "${engineVendor}");

		AssertTextEquals.assertPartialText(
			locator1 = "SearchAdmin#SEARCH_ENGINE_INFORMATION",
			position = "2",
			searchInformation = "${clientVersion}",
			value1 = "${clientVersion}");

		AssertTextEquals.assertPartialText(
			locator1 = "SearchAdmin#SEARCH_ENGINE_INFORMATION",
			position = "3",
			searchInformation = "${serverVersion}",
			value1 = "${serverVersion}");
	}

	macro executeSearchActions {
		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Search");

		Panel.expandPanel(panel = "Index Actions");

		AssertClick.assertTextClickAtAndPause(
			key_actionsDescription = "${actionsDescription}",
			locator1 = "Button#EXECUTE_ACTION",
			value1 = "Execute");

		var reindexElapsedTime = "0";
		var searchEngineVendor = selenium.getText("//div[contains(@class,'alert alert-info')]//strong[1]");

		if (contains("${searchEngineVendor}", "Elasticsearch")) {
			echo("Current Elasticsearch Tasks:");

			var curl = "http://localhost:9200/_tasks";
			var elasticsearchTasks = JSONCurlUtil.get("${curl}");

			while (contains("${elasticsearchTasks}", "indices:data/write/bulk") && ("${reindexElapsedTime}" != "120")) {
				Pause(locator1 = "5000");

				var reindexElapsedTime = ${reindexElapsedTime} + 5;

				echo("Current Elasticsearch Tasks:");

				elasticsearchTasks = JSONCurlUtil.get("${curl}");
			}
		}
		else if (contains("${searchEngineVendor}", "Solr")) {
			while (IsElementPresent(locator1 = "ControlMenu#RELOAD_TOOLTIP")&& ("${reindexElapsedTime}" != "120")) {
				Pause(locator1 = "5000");

				var reindexElapsedTime = ${reindexElapsedTime} + 5;
			}
		}

		if ("${reindexElapsedTime}" == "120") {
			fail("Reindex timed out after 120 seconds.");
		}
		else {
			echo("Finished reindexing after ${reindexElapsedTime} seconds.");
		}
	}

}